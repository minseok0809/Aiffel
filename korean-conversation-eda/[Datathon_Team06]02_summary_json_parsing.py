# -*- coding: utf-8 -*-
"""[Datathon_Team06]02_Summary_Json_Parsing.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1veRWBfhw2tf_l0Qeog3rGoHEIOf1sm_A

#데이터톤

[AI HUB 한국어 대화 요약](https://www.aihub.or.kr/aihubdata/data/view.do?currMenu=116&topMenu=100&aihubDataSe=ty&dataSetSn=117)

개발 환경
<br/>데이터 정보
<br/>Json Parsing
<br/>CSV 변환
<br/>참고문헌

#개발 환경
"""

gpu_info = !nvidia-smi
gpu_info = '\n'.join(gpu_info)
if gpu_info.find('failed') >= 0:
  print('Not connected to a GPU')
else:
  print(gpu_info)

from psutil import virtual_memory
ram_gb = virtual_memory().total / 1e9
print('Your runtime has {:.1f} gigabytes of available RAM\n'.format(ram_gb))

if ram_gb < 20:
  print('Not using a high-RAM runtime')
else:
  print('You are using a high-RAM runtime!')

from google.colab import drive
drive.mount('/content/drive')

import pandas as pd
import json

"""JSON은 Key-value를 양식을 가지는 텍스트 파일로 인터넷 상의 서버-클라이언트의 데이터 교환에 사용된다. 
<br/>Python에서는 json 모듈을 지원하고 있으면 인코딩/디코딩을 지원하고 있고, JSON 데이터와 Python 데이터는 1:1로 맵핑되어 사용하기 쉽다.

JSON(JavaScript Object Notation)은 속성-값 쌍(attribute–value pairs and array data types (or any other serializable value))
<br/>또는 "키-값 쌍"으로 이루어진 데이터 오브젝트를 전달하기 위해 인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷입니다.
<br/>비동기 브라우저/서버 통신 (AJAX)을 위해, 넓게는 XML(AJAX가 사용)을 대체하는 주요 데이터 포맷이다.

#데이터 정보
"""

event_json_path = '/content/drive/MyDrive/Dataton/kor_sum_train/행사.json'

with open(event_json_path, 'r') as event_json_file:
  event_json_sample = json.load(event_json_file)

"""한국어 대화 요약 데이터는 크라우드 소싱을 통해 수집한 35만 건이다.
<br/>크라우드 워커에 의해 대화 조각을 기준에 맞게 나누고
<br/>비식별화를 수행한 데이터는 이후 가공 과정을 통해 메타 정보와 요약문을 어노테이션하였다.

(최소 4턴 이상의) 대화원문 + 요약문 35만건 (JSON파일, UTF-8 인코딩)
<br/>오픈 도메인 일상대화주제로 구성

대화 텍스트는 문어 중심으로 개발된 기존의 자연어처리
<br/>기술의 적용에 한계가 있어, 문어에 특화된 데이터셋의 구축이 필수적으로 요청된다.
* 비대면 상황에서 컴퓨터를 매개로 하여 이루어지는 SNS 대화의 경우에도 구어적 속성
* 문장 성분의 생략, 축약적 표현의 사용

##대화 매체

본 과제의 원천 데이터는 대중들의 일상생활에서 가장 널리 쓰이는 카카오톡을 이용하여
<br/>이루어진 대화 원문으로 선정하여 포괄성을 확보한다.

원시데이터는 카카오톡에서 이루어진 대화를 “대화 내용 내보내기” - “텍스트 메시지만 보내기” 기능에 의해
<br/>생성된 플레인 텍스트 파일 형태이다.

**관련 연구**
<br/>박일섭. 2019. 《메신저 대화 자료 수집 및 말뭉치 구축》. 국립국어원.

##대화 분포

|대화 주제|빈도|분포|
|------|---|---|
|개인 및 관계|1,887|18.87%|
|식음료|1,283|12.83%|
|주거와 생활|1,242|12.42%|
|상거래(쇼핑)|1,228|12.28%|
|행사|1,150|11.50%|
|여가 생활|1,066|10.66%|
|미용과 건강|927 | 9.27%|
|일과 직업|724|7.24%|
|시사/교육|493|4.93%|
|합계|10,000|100.00%|

그 중에서 행사.json 파일을 불러온다.

대화 주제 분포에서 '행사'는 11.50%를 차지한다.

##대화 내용

일상 대화와 토론 대화에서는 다양한 주제가 다루어질 수 있는데
<br/>본 과제에서는 최대한 다양한 내용을 담기 위해 
<br/>기존 유사 사업에서 제시한 대화 주제 분류를 재분류하고 최대한 골고루 수집될 수 있도록 함

대분류 : 행사

소분류 : 초대, 방문, 소개팅, 약속, 가족 및 친척 행사, 공적 행사, 사적 모임(친목 모임),
<br/>여행 장소 및 경로, 여행 계획(일정, 숙소, 교통편, 여행 경비), 여행팁, 기념품,
여행사 및 여행 상품

##데이터 포맷

{
<br/>“header”: {
<br/>“dialogueInfo”: {
<br/>“dialogueID”: “D000001”,
<br/>“numberOfParticipants”: 3,
<br/>“numberOfUtterances”: 5,
<br/>“numberOfTurns”: 2,
<br/>“type”: “일상대화”,
<br/>“topic”: “행사”
<br/><br/>“participants”: [
<br/>{
<br/>“participantID”: “P1”,
<br/>“gender”: “남”,
<br/>“age”: “50대”,
<br/>“residentialProvince”: “서울”
<br/>},
<br/><br/>...
<br/><br/>]
<br/>},
<br/><br/>“body”: {
<br/>“dialogue”: [
<br/>{
<br/>“utteranceID”: “U1”,
<br/>“turnID”: “T1”
<br/>“participantID”: “P1”,
<br/>“date”: “2020-07-23”
<br/>“time”: “10:52:02”,
<br/>“utterance”: “내일이 #@이름# 엄마 생일임.”
<br/>},
<br/><br/>...
<br/><br/>]
<br/>“summary”: “엄마 생일을 맞아 모두 모여 외식할 수 있는 저녁 식사 시간을 정하고 있
다.”
<br/>}
<br/>}
"""

type(event_json_sample)

event_json_sample.keys()

for key in event_json_sample.keys():
  print(key)

event_json_sample['numberOfItems']

"""numberOfItems은 대화의 순서(번호)

data는 각 대화
"""

type(event_json_sample['numberOfItems'])

type(event_json_sample['data'])

event_json_sample['data'][0].keys()

"""data에서 header는 대화와 화자에 대한 정보

body는 각 turn에 대한 정보

#Json Parsing
"""

event_json_sample_summary_list = []

for i in event_json_sample['data'] :
  event_json_sample_body = i['body']
  for j in event_json_sample_body :
    event_json_sample_summary = event_json_sample_body['summary']
    event_json_sample_summary_list.append(event_json_sample_summary)

event_json_sample_summary_df = pd.DataFrame(event_json_sample_summary_list)

event_json_sample_summary_df[0:1]

event_json_sample_summary_df2 = event_json_sample_summary_df.iloc[::2,:]

event_json_sample_summary_df2[:1]

"""0 ~ 1행.  2 ~ 3행, 4 ~ 5행으로 2행씩 내용이 중복되므로
<br>홀수행을 제외한다.
"""

event_json_sample_summary_df2.columns = ['text']

event_json_sample_summary_df2.head()

event_summary_df = event_json_sample_summary_df2[:10000]

event_summary_df

"""20720개의 요약문에서 10000개의 샘플을 추출한다.

#CSV 변환
"""

event_summary_df.to_csv("/content/drive/MyDrive/Dataton/event_summary.csv", index = False)

"""csv 파일로 저장한다."""

df = pd.read_csv("/content/drive/MyDrive/Dataton/event_summary.csv")

df

"""csv 파일을 불러온다.

#참고문헌

[Python: JSON 개념과 json 모듈 사용법](https://kibua20.tistory.com/114)
"""